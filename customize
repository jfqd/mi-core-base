#!/usr/bin/bash

set -o errexit

PATH=/opt/local/gnu/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin

# Munin plugins
MUNIN_PLUGIN_VERSION='0.12.3'
MUNIN_PLUGINS="
	cert_expire
	cputime
	df
	load
	uptime
	users
	proc_state
	vfs_bytes
	vfs_iops
	vfs_latency
	if_net0
	pkg_audit
	memory_cap
	swap_cap
	smf
	tcp
	udp
"

# -echo "* Use the skylime pkgsrc mirror"
# -gsed -i 's:pkgsrc.joyent.com:pkgsrc.qutic.com:g' /opt/local/etc/pkgin/repositories.conf
# -gsed -i 's:pkgsrc.joyent.com:pkgsrc.qutic.com:g' /opt/local/etc/pkg_install.conf
# -pkg_admin rebuild
# -pkgin -y up

## MUNIN
echo "* Create munin template file that will be used during mdata setup"
cp /opt/local/etc/munin/munin-node.conf /opt/local/etc/munin/munin-node.conf.tpl

echo "* Download and install community munin plugins (overwrite all other plugins)"
curl -L -s https://github.com/jfqd/smartos-munin-plugins/archive/v${MUNIN_PLUGIN_VERSION}.tar.gz | gtar xz -C /opt/local/lib/munin/plugins --strip-components=1

echo "* Activate munin plugins"
/opt/qutic/bin/munin-node-plugins ${MUNIN_PLUGINS}

# get latest updates
pkgin update
pkgin upgrade

echo "* Cleanup home/admin because of delegate dataset usage"
rm -rf /home/admin/.[^.]*

# bash extensions
cat >> /etc/skel/.bashrc << EOF
PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ '
alias la="ls -al"
alias t="cd /var/log/ && tail -n 50 -f "
alias msg="/usr/bin/tail -n 50 -f /var/adm/messages"
LANG=en_US.UTF-8
LANGUAGE=en_US.UTF-8
LC_MONETARY=de_DE.UTF-8
LC_TIME=de_DE.UTF-8
LC_CTYPE=de_DE.UTF-8
LC_NUMERIC=de_DE.UTF-8
LC_MESSAGES=C
EDITOR=nano
HISTSIZE=2000
HISTFILESIZE=25000
HISTTIMEFORMAT="[%d.%m.%Y %T] "
EOF

# nanorc extensions
cat >> /opt/local/etc/nanorc << EOF
include "/opt/local/share/nano/ruby.nanorc"
include "/opt/local/share/nano/sh.nanorc"
include "/opt/local/share/nano/nanorc.nanorc"
include "/opt/local/share/nano/html.nanorc"
include "/opt/local/share/nano/css.nanorc"
EOF

echo "* Cleaning up."
rm -rf /root/*

# Provide workaround for /.zonecontrol/metadata.sock issue
# https://github.com/joyent/smtools/issues/3
gsed -i 's:^rm -f /.zonecontrol/metadata.sock$:rm -f /.zonecontrol/metadata.sock || true:g' \
	/opt/local/bin/sm-prepare-image

echo "* Prepare image"
sm-prepare-image -y
